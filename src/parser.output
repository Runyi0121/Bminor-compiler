Terminals unused in grammar

   TOKEN_CCOMMENT
   TOKEN_CPLUSCOMMENT
   TOKEN_WHILE
   TOKEN_SPECIALCHAR
   TOKEN_NEGATIVE
   TOKEN_PERCENT
   TOKEN_ERROR


Grammar

    0 $accept: program TOKEN_EOF

    1 program: decl_list TOKEN_EOF

    2 decl_list: decl decl_list
    3          | %empty

    4 decl: ident TOKEN_COLON type TOKEN_SEMICOLON
    5     | ident TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    8 stmt_array: stmt_list
    9           | %empty

   10 array_content: expr TOKEN_COMMA array_content
   11              | expr_base

   12 ident: TOKEN_TYPE_IDENT

   13 type: TOKEN_INTEGER
   14     | TOKEN_BOOLEAN
   15     | TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET type
   16     | TOKEN_CHAR
   17     | TOKEN_FLOAT
   18     | TOKEN_STRING
   19     | TOKEN_VOID
   20     | TOKEN_AUTO
   21     | TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE

   22 arg_lists: arg_list
   23          | %empty

   24 arg_list: arg TOKEN_COMMA arg_list
   25         | arg

   26 arg: ident TOKEN_COLON type

   27 stmt_list: stmt stmt_list
   28          | stmt

   29 stmt: stmt_recursive
   30     | stmt_closed

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32               | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   33               | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt

   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed
   35            | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed
   36            | stmt_base

   37 stmt_base: expr TOKEN_SEMICOLON
   38          | TOKEN_RETURN expr TOKEN_SEMICOLON
   39          | TOKEN_PRINT expr_list TOKEN_SEMICOLON
   40          | TOKEN_FRONTCURLYBRACKET stmt_list TOKEN_BACKCURLYBRACKET
   41          | decl

   42 optional_stmt: expr
   43              | %empty

   44 expr_list: expr TOKEN_COMMA expr_list
   45          | expr

   46 expr: expr TOKEN_ASSIGN expr_or
   47     | expr_or

   48 expr_or: expr_or TOKEN_OR expr_and
   49        | expr_and

   50 expr_and: expr_and TOKEN_AND expr_comp
   51         | expr_comp

   52 expr_comp: expr_comp TOKEN_LESSTHAN expr_arith1
   53          | expr_comp TOKEN_LESSEQUAL expr_arith1
   54          | expr_comp TOKEN_GREATERTHAN expr_arith1
   55          | expr_comp TOKEN_GREATEREQUAL expr_arith1
   56          | expr_comp TOKEN_EQUAL expr_arith1
   57          | expr_comp TOKEN_NOTEQUAL expr_arith1
   58          | expr_arith1

   59 expr_arith1: expr_arith1 TOKEN_ADD expr_arith2
   60            | expr_arith1 TOKEN_SUBTRACT expr_arith2
   61            | expr_arith2

   62 expr_arith2: expr_arith2 TOKEN_MULTIPLY expr_expo
   63            | expr_arith2 TOKEN_DIVIDE expr_expo
   64            | expr_arith2 TOKEN_REMAIN expr_expo
   65            | expr_expo

   66 expr_expo: expr_expo TOKEN_EXPONENTIAL expr_not
   67          | expr_not

   68 expr_not: TOKEN_SUBTRACT expr_not
   69         | TOKEN_LOGICALNOT expr_not
   70         | expr_crement

   71 expr_crement: expr_crement TOKEN_INCREMENT
   72             | expr_crement TOKEN_DECREMENT
   73             | expr_group

   74 expr_group: TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE
   75           | expr_base

   76 expr_base: TOKEN_TYPE_CHAR
   77          | TOKEN_TYPE_INT
   78          | TOKEN_TRUE
   79          | TOKEN_FALSE
   80          | TOKEN_TYPE_FLOAT
   81          | TOKEN_TYPE_STRING
   82          | ident others

   83 others: TOKEN_FRONTSQUAREBRACKET expr TOKEN_BACKSQUAREBRACKET others
   84       | TOKEN_FRONTPARENTHESE expr_list TOKEN_BACKPARENTHESE
   85       | %empty


Terminals, with rules where they appear

TOKEN_EOF (0) 0 1
error (256)
TOKEN_CCOMMENT (258)
TOKEN_CPLUSCOMMENT (259)
TOKEN_ARRAY (260) 15
TOKEN_AUTO (261) 20
TOKEN_BOOLEAN (262) 14
TOKEN_CHAR (263) 16
TOKEN_ELSE (264) 32 35
TOKEN_FALSE (265) 79
TOKEN_FLOAT (266) 17
TOKEN_FOR (267) 31 34
TOKEN_FUNCTION (268) 21
TOKEN_IF (269) 32 33 35
TOKEN_INTEGER (270) 13
TOKEN_PRINT (271) 39
TOKEN_RETURN (272) 38
TOKEN_STRING (273) 18
TOKEN_TRUE (274) 78
TOKEN_VOID (275) 19
TOKEN_WHILE (276)
TOKEN_SPECIALCHAR (277)
TOKEN_ADD (278) 59
TOKEN_SUBTRACT (279) 60 68
TOKEN_INCREMENT (280) 71
TOKEN_DECREMENT (281) 72
TOKEN_FRONTPARENTHESE (282) 21 31 32 33 34 35 74 84
TOKEN_BACKPARENTHESE (283) 21 31 32 33 34 35 74 84
TOKEN_FRONTSQUAREBRACKET (284) 15 83
TOKEN_BACKSQUAREBRACKET (285) 15 83
TOKEN_FRONTCURLYBRACKET (286) 6 7 40
TOKEN_BACKCURLYBRACKET (287) 6 7 40
TOKEN_NEGATIVE (288)
TOKEN_LOGICALNOT (289) 69
TOKEN_EXPONENTIAL (290) 66
TOKEN_MULTIPLY (291) 62
TOKEN_DIVIDE (292) 63
TOKEN_REMAIN (293) 64
TOKEN_LESSTHAN (294) 52
TOKEN_LESSEQUAL (295) 53
TOKEN_GREATERTHAN (296) 54
TOKEN_GREATEREQUAL (297) 55
TOKEN_EQUAL (298) 56
TOKEN_NOTEQUAL (299) 57
TOKEN_AND (300) 50
TOKEN_OR (301) 48
TOKEN_ASSIGN (302) 5 6 7 46
TOKEN_COLON (303) 4 5 6 7 26
TOKEN_SEMICOLON (304) 4 5 7 31 34 37 38 39
TOKEN_COMMA (305) 10 24 44
TOKEN_PERCENT (306)
TOKEN_TYPE_CHAR (307) 76
TOKEN_TYPE_INT (308) 77
TOKEN_TYPE_FLOAT (309) 80
TOKEN_TYPE_IDENT (310) 12
TOKEN_TYPE_STRING (311) 81
TOKEN_ERROR (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
decl_list (60)
    on left: 2 3, on right: 1 2
decl (61)
    on left: 4 5 6 7, on right: 2 41
stmt_array (62)
    on left: 8 9, on right: 6
array_content (63)
    on left: 10 11, on right: 7 10
ident (64)
    on left: 12, on right: 4 5 6 7 26 82
type (65)
    on left: 13 14 15 16 17 18 19 20 21, on right: 4 5 6 7 15 21 26
arg_lists (66)
    on left: 22 23, on right: 21
arg_list (67)
    on left: 24 25, on right: 22 24
arg (68)
    on left: 26, on right: 24 25
stmt_list (69)
    on left: 27 28, on right: 8 27 40
stmt (70)
    on left: 29 30, on right: 27 28 33
stmt_recursive (71)
    on left: 31 32 33, on right: 29 31 32
stmt_closed (72)
    on left: 34 35 36, on right: 30 32 34 35
stmt_base (73)
    on left: 37 38 39 40 41, on right: 36
optional_stmt (74)
    on left: 42 43, on right: 15 31 34
expr_list (75)
    on left: 44 45, on right: 5 39 44 84
expr (76)
    on left: 46 47, on right: 10 32 33 35 37 38 42 44 45 46 74 83
expr_or (77)
    on left: 48 49, on right: 46 47 48
expr_and (78)
    on left: 50 51, on right: 48 49 50
expr_comp (79)
    on left: 52 53 54 55 56 57 58, on right: 50 51 52 53 54 55 56 57
expr_arith1 (80)
    on left: 59 60 61, on right: 52 53 54 55 56 57 58 59 60
expr_arith2 (81)
    on left: 62 63 64 65, on right: 59 60 61 62 63 64
expr_expo (82)
    on left: 66 67, on right: 62 63 64 65 66
expr_not (83)
    on left: 68 69 70, on right: 66 67 68 69
expr_crement (84)
    on left: 71 72 73, on right: 70 71 72
expr_group (85)
    on left: 74 75, on right: 73
expr_base (86)
    on left: 76 77 78 79 80 81 82, on right: 11 75
others (87)
    on left: 83 84 85, on right: 82 83


State 0

    0 $accept: . program TOKEN_EOF

    TOKEN_TYPE_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    ident      go to state 5


State 1

   12 ident: TOKEN_TYPE_IDENT .

    $default  reduce using rule 12 (ident)


State 2

    0 $accept: program . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 6


State 3

    1 program: decl_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 7


State 4

    2 decl_list: decl . decl_list

    TOKEN_TYPE_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 8
    decl       go to state 4
    ident      go to state 5


State 5

    4 decl: ident . TOKEN_COLON type TOKEN_SEMICOLON
    5     | ident . TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 9


State 6

    0 $accept: program TOKEN_EOF .

    $default  accept


State 7

    1 program: decl_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 8

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 9

    4 decl: ident TOKEN_COLON . type TOKEN_SEMICOLON
    5     | ident TOKEN_COLON . type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | ident TOKEN_COLON . type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident TOKEN_COLON . type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    TOKEN_ARRAY     shift, and go to state 10
    TOKEN_AUTO      shift, and go to state 11
    TOKEN_BOOLEAN   shift, and go to state 12
    TOKEN_CHAR      shift, and go to state 13
    TOKEN_FLOAT     shift, and go to state 14
    TOKEN_FUNCTION  shift, and go to state 15
    TOKEN_INTEGER   shift, and go to state 16
    TOKEN_STRING    shift, and go to state 17
    TOKEN_VOID      shift, and go to state 18

    type  go to state 19


State 10

   15 type: TOKEN_ARRAY . TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET type

    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 20


State 11

   20 type: TOKEN_AUTO .

    $default  reduce using rule 20 (type)


State 12

   14 type: TOKEN_BOOLEAN .

    $default  reduce using rule 14 (type)


State 13

   16 type: TOKEN_CHAR .

    $default  reduce using rule 16 (type)


State 14

   17 type: TOKEN_FLOAT .

    $default  reduce using rule 17 (type)


State 15

   21 type: TOKEN_FUNCTION . type TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE

    TOKEN_ARRAY     shift, and go to state 10
    TOKEN_AUTO      shift, and go to state 11
    TOKEN_BOOLEAN   shift, and go to state 12
    TOKEN_CHAR      shift, and go to state 13
    TOKEN_FLOAT     shift, and go to state 14
    TOKEN_FUNCTION  shift, and go to state 15
    TOKEN_INTEGER   shift, and go to state 16
    TOKEN_STRING    shift, and go to state 17
    TOKEN_VOID      shift, and go to state 18

    type  go to state 21


State 16

   13 type: TOKEN_INTEGER .

    $default  reduce using rule 13 (type)


State 17

   18 type: TOKEN_STRING .

    $default  reduce using rule 18 (type)


State 18

   19 type: TOKEN_VOID .

    $default  reduce using rule 19 (type)


State 19

    4 decl: ident TOKEN_COLON type . TOKEN_SEMICOLON
    5     | ident TOKEN_COLON type . TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | ident TOKEN_COLON type . TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident TOKEN_COLON type . TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 22
    TOKEN_SEMICOLON  shift, and go to state 23


State 20

   15 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET . optional_stmt TOKEN_BACKSQUAREBRACKET type

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    $default  reduce using rule 43 (optional_stmt)

    ident          go to state 33
    optional_stmt  go to state 34
    expr           go to state 35
    expr_or        go to state 36
    expr_and       go to state 37
    expr_comp      go to state 38
    expr_arith1    go to state 39
    expr_arith2    go to state 40
    expr_expo      go to state 41
    expr_not       go to state 42
    expr_crement   go to state 43
    expr_group     go to state 44
    expr_base      go to state 45


State 21

   21 type: TOKEN_FUNCTION type . TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE

    TOKEN_FRONTPARENTHESE  shift, and go to state 46


State 22

    5 decl: ident TOKEN_COLON type TOKEN_ASSIGN . expr_list TOKEN_SEMICOLON
    6     | ident TOKEN_COLON type TOKEN_ASSIGN . TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident TOKEN_COLON type TOKEN_ASSIGN . TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 47
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    ident         go to state 33
    expr_list     go to state 48
    expr          go to state 49
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 23

    4 decl: ident TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 4 (decl)


State 24

   79 expr_base: TOKEN_FALSE .

    $default  reduce using rule 79 (expr_base)


State 25

   78 expr_base: TOKEN_TRUE .

    $default  reduce using rule 78 (expr_base)


State 26

   68 expr_not: TOKEN_SUBTRACT . expr_not

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_not      go to state 50
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 27

   74 expr_group: TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr          go to state 51
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 28

   69 expr_not: TOKEN_LOGICALNOT . expr_not

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_not      go to state 52
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 29

   76 expr_base: TOKEN_TYPE_CHAR .

    $default  reduce using rule 76 (expr_base)


State 30

   77 expr_base: TOKEN_TYPE_INT .

    $default  reduce using rule 77 (expr_base)


State 31

   80 expr_base: TOKEN_TYPE_FLOAT .

    $default  reduce using rule 80 (expr_base)


State 32

   81 expr_base: TOKEN_TYPE_STRING .

    $default  reduce using rule 81 (expr_base)


State 33

   82 expr_base: ident . others

    TOKEN_FRONTPARENTHESE     shift, and go to state 53
    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 54

    $default  reduce using rule 85 (others)

    others  go to state 55


State 34

   15 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt . TOKEN_BACKSQUAREBRACKET type

    TOKEN_BACKSQUAREBRACKET  shift, and go to state 56


State 35

   42 optional_stmt: expr .
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN  shift, and go to state 57

    $default  reduce using rule 42 (optional_stmt)


State 36

   47 expr: expr_or .
   48 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 58

    $default  reduce using rule 47 (expr)


State 37

   49 expr_or: expr_and .
   50 expr_and: expr_and . TOKEN_AND expr_comp

    TOKEN_AND  shift, and go to state 59

    $default  reduce using rule 49 (expr_or)


State 38

   51 expr_and: expr_comp .
   52 expr_comp: expr_comp . TOKEN_LESSTHAN expr_arith1
   53          | expr_comp . TOKEN_LESSEQUAL expr_arith1
   54          | expr_comp . TOKEN_GREATERTHAN expr_arith1
   55          | expr_comp . TOKEN_GREATEREQUAL expr_arith1
   56          | expr_comp . TOKEN_EQUAL expr_arith1
   57          | expr_comp . TOKEN_NOTEQUAL expr_arith1

    TOKEN_LESSTHAN      shift, and go to state 60
    TOKEN_LESSEQUAL     shift, and go to state 61
    TOKEN_GREATERTHAN   shift, and go to state 62
    TOKEN_GREATEREQUAL  shift, and go to state 63
    TOKEN_EQUAL         shift, and go to state 64
    TOKEN_NOTEQUAL      shift, and go to state 65

    $default  reduce using rule 51 (expr_and)


State 39

   58 expr_comp: expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 58 (expr_comp)


State 40

   61 expr_arith1: expr_arith2 .
   62 expr_arith2: expr_arith2 . TOKEN_MULTIPLY expr_expo
   63            | expr_arith2 . TOKEN_DIVIDE expr_expo
   64            | expr_arith2 . TOKEN_REMAIN expr_expo

    TOKEN_MULTIPLY  shift, and go to state 68
    TOKEN_DIVIDE    shift, and go to state 69
    TOKEN_REMAIN    shift, and go to state 70

    $default  reduce using rule 61 (expr_arith1)


State 41

   65 expr_arith2: expr_expo .
   66 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 71

    $default  reduce using rule 65 (expr_arith2)


State 42

   67 expr_expo: expr_not .

    $default  reduce using rule 67 (expr_expo)


State 43

   70 expr_not: expr_crement .
   71 expr_crement: expr_crement . TOKEN_INCREMENT
   72             | expr_crement . TOKEN_DECREMENT

    TOKEN_INCREMENT  shift, and go to state 72
    TOKEN_DECREMENT  shift, and go to state 73

    $default  reduce using rule 70 (expr_not)


State 44

   73 expr_crement: expr_group .

    $default  reduce using rule 73 (expr_crement)


State 45

   75 expr_group: expr_base .

    $default  reduce using rule 75 (expr_group)


State 46

   21 type: TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE . arg_lists TOKEN_BACKPARENTHESE

    TOKEN_TYPE_IDENT  shift, and go to state 1

    $default  reduce using rule 23 (arg_lists)

    ident      go to state 74
    arg_lists  go to state 75
    arg_list   go to state 76
    arg        go to state 77


State 47

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET . stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET . array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_FOR                shift, and go to state 78
    TOKEN_IF                 shift, and go to state 79
    TOKEN_PRINT              shift, and go to state 80
    TOKEN_RETURN             shift, and go to state 81
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 82
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    $default  reduce using rule 9 (stmt_array)

    decl            go to state 83
    stmt_array      go to state 84
    array_content   go to state 85
    ident           go to state 86
    stmt_list       go to state 87
    stmt            go to state 88
    stmt_recursive  go to state 89
    stmt_closed     go to state 90
    stmt_base       go to state 91
    expr            go to state 92
    expr_or         go to state 36
    expr_and        go to state 37
    expr_comp       go to state 38
    expr_arith1     go to state 39
    expr_arith2     go to state 40
    expr_expo       go to state 41
    expr_not        go to state 42
    expr_crement    go to state 43
    expr_group      go to state 44
    expr_base       go to state 93


State 48

    5 decl: ident TOKEN_COLON type TOKEN_ASSIGN expr_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 94


State 49

   44 expr_list: expr . TOKEN_COMMA expr_list
   45          | expr .
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN  shift, and go to state 57
    TOKEN_COMMA   shift, and go to state 95

    $default  reduce using rule 45 (expr_list)


State 50

   68 expr_not: TOKEN_SUBTRACT expr_not .

    $default  reduce using rule 68 (expr_not)


State 51

   46 expr: expr . TOKEN_ASSIGN expr_or
   74 expr_group: TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE

    TOKEN_BACKPARENTHESE  shift, and go to state 96
    TOKEN_ASSIGN          shift, and go to state 57


State 52

   69 expr_not: TOKEN_LOGICALNOT expr_not .

    $default  reduce using rule 69 (expr_not)


State 53

   84 others: TOKEN_FRONTPARENTHESE . expr_list TOKEN_BACKPARENTHESE

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_list     go to state 97
    expr          go to state 49
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 54

   83 others: TOKEN_FRONTSQUAREBRACKET . expr TOKEN_BACKSQUAREBRACKET others

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr          go to state 98
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 55

   82 expr_base: ident others .

    $default  reduce using rule 82 (expr_base)


State 56

   15 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET . type

    TOKEN_ARRAY     shift, and go to state 10
    TOKEN_AUTO      shift, and go to state 11
    TOKEN_BOOLEAN   shift, and go to state 12
    TOKEN_CHAR      shift, and go to state 13
    TOKEN_FLOAT     shift, and go to state 14
    TOKEN_FUNCTION  shift, and go to state 15
    TOKEN_INTEGER   shift, and go to state 16
    TOKEN_STRING    shift, and go to state 17
    TOKEN_VOID      shift, and go to state 18

    type  go to state 99


State 57

   46 expr: expr TOKEN_ASSIGN . expr_or

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_or       go to state 100
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 58

   48 expr_or: expr_or TOKEN_OR . expr_and

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_and      go to state 101
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 59

   50 expr_and: expr_and TOKEN_AND . expr_comp

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_comp     go to state 102
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 60

   52 expr_comp: expr_comp TOKEN_LESSTHAN . expr_arith1

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith1   go to state 103
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 61

   53 expr_comp: expr_comp TOKEN_LESSEQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith1   go to state 104
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 62

   54 expr_comp: expr_comp TOKEN_GREATERTHAN . expr_arith1

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith1   go to state 105
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 63

   55 expr_comp: expr_comp TOKEN_GREATEREQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith1   go to state 106
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 64

   56 expr_comp: expr_comp TOKEN_EQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith1   go to state 107
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 65

   57 expr_comp: expr_comp TOKEN_NOTEQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith1   go to state 108
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 66

   59 expr_arith1: expr_arith1 TOKEN_ADD . expr_arith2

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith2   go to state 109
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 67

   60 expr_arith1: expr_arith1 TOKEN_SUBTRACT . expr_arith2

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_arith2   go to state 110
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 68

   62 expr_arith2: expr_arith2 TOKEN_MULTIPLY . expr_expo

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_expo     go to state 111
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 69

   63 expr_arith2: expr_arith2 TOKEN_DIVIDE . expr_expo

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_expo     go to state 112
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 70

   64 expr_arith2: expr_arith2 TOKEN_REMAIN . expr_expo

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_expo     go to state 113
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 71

   66 expr_expo: expr_expo TOKEN_EXPONENTIAL . expr_not

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_not      go to state 114
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 72

   71 expr_crement: expr_crement TOKEN_INCREMENT .

    $default  reduce using rule 71 (expr_crement)


State 73

   72 expr_crement: expr_crement TOKEN_DECREMENT .

    $default  reduce using rule 72 (expr_crement)


State 74

   26 arg: ident . TOKEN_COLON type

    TOKEN_COLON  shift, and go to state 115


State 75

   21 type: TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE arg_lists . TOKEN_BACKPARENTHESE

    TOKEN_BACKPARENTHESE  shift, and go to state 116


State 76

   22 arg_lists: arg_list .

    $default  reduce using rule 22 (arg_lists)


State 77

   24 arg_list: arg . TOKEN_COMMA arg_list
   25         | arg .

    TOKEN_COMMA  shift, and go to state 117

    $default  reduce using rule 25 (arg_list)


State 78

   31 stmt_recursive: TOKEN_FOR . TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR . TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FRONTPARENTHESE  shift, and go to state 118


State 79

   32 stmt_recursive: TOKEN_IF . TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   33               | TOKEN_IF . TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt
   35 stmt_closed: TOKEN_IF . TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed

    TOKEN_FRONTPARENTHESE  shift, and go to state 119


State 80

   39 stmt_base: TOKEN_PRINT . expr_list TOKEN_SEMICOLON

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_list     go to state 120
    expr          go to state 49
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 81

   38 stmt_base: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr          go to state 121
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 82

   40 stmt_base: TOKEN_FRONTCURLYBRACKET . stmt_list TOKEN_BACKCURLYBRACKET

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_FOR                shift, and go to state 78
    TOKEN_IF                 shift, and go to state 79
    TOKEN_PRINT              shift, and go to state 80
    TOKEN_RETURN             shift, and go to state 81
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 82
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    decl            go to state 83
    ident           go to state 86
    stmt_list       go to state 122
    stmt            go to state 88
    stmt_recursive  go to state 89
    stmt_closed     go to state 90
    stmt_base       go to state 91
    expr            go to state 123
    expr_or         go to state 36
    expr_and        go to state 37
    expr_comp       go to state 38
    expr_arith1     go to state 39
    expr_arith2     go to state 40
    expr_expo       go to state 41
    expr_not        go to state 42
    expr_crement    go to state 43
    expr_group      go to state 44
    expr_base       go to state 45


State 83

   41 stmt_base: decl .

    $default  reduce using rule 41 (stmt_base)


State 84

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array . TOKEN_BACKCURLYBRACKET

    TOKEN_BACKCURLYBRACKET  shift, and go to state 124


State 85

    7 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content . TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON

    TOKEN_BACKCURLYBRACKET  shift, and go to state 125


State 86

    4 decl: ident . TOKEN_COLON type TOKEN_SEMICOLON
    5     | ident . TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
    7     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON
   82 expr_base: ident . others

    TOKEN_FRONTPARENTHESE     shift, and go to state 53
    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 54
    TOKEN_COLON               shift, and go to state 9

    $default  reduce using rule 85 (others)

    others  go to state 55


State 87

    8 stmt_array: stmt_list .

    $default  reduce using rule 8 (stmt_array)


State 88

   27 stmt_list: stmt . stmt_list
   28          | stmt .

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_FOR                shift, and go to state 78
    TOKEN_IF                 shift, and go to state 79
    TOKEN_PRINT              shift, and go to state 80
    TOKEN_RETURN             shift, and go to state 81
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 82
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    $default  reduce using rule 28 (stmt_list)

    decl            go to state 83
    ident           go to state 86
    stmt_list       go to state 126
    stmt            go to state 88
    stmt_recursive  go to state 89
    stmt_closed     go to state 90
    stmt_base       go to state 91
    expr            go to state 123
    expr_or         go to state 36
    expr_and        go to state 37
    expr_comp       go to state 38
    expr_arith1     go to state 39
    expr_arith2     go to state 40
    expr_expo       go to state 41
    expr_not        go to state 42
    expr_crement    go to state 43
    expr_group      go to state 44
    expr_base       go to state 45


State 89

   29 stmt: stmt_recursive .

    $default  reduce using rule 29 (stmt)


State 90

   30 stmt: stmt_closed .

    $default  reduce using rule 30 (stmt)


State 91

   36 stmt_closed: stmt_base .

    $default  reduce using rule 36 (stmt_closed)


State 92

   10 array_content: expr . TOKEN_COMMA array_content
   37 stmt_base: expr . TOKEN_SEMICOLON
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN     shift, and go to state 57
    TOKEN_SEMICOLON  shift, and go to state 127
    TOKEN_COMMA      shift, and go to state 128


State 93

   11 array_content: expr_base .
   75 expr_group: expr_base .

    TOKEN_BACKCURLYBRACKET  reduce using rule 11 (array_content)
    $default                reduce using rule 75 (expr_group)


State 94

    5 decl: ident TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON .

    $default  reduce using rule 5 (decl)


State 95

   44 expr_list: expr TOKEN_COMMA . expr_list

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr_list     go to state 129
    expr          go to state 49
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 96

   74 expr_group: TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE .

    $default  reduce using rule 74 (expr_group)


State 97

   84 others: TOKEN_FRONTPARENTHESE expr_list . TOKEN_BACKPARENTHESE

    TOKEN_BACKPARENTHESE  shift, and go to state 130


State 98

   46 expr: expr . TOKEN_ASSIGN expr_or
   83 others: TOKEN_FRONTSQUAREBRACKET expr . TOKEN_BACKSQUAREBRACKET others

    TOKEN_BACKSQUAREBRACKET  shift, and go to state 131
    TOKEN_ASSIGN             shift, and go to state 57


State 99

   15 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET type .

    $default  reduce using rule 15 (type)


State 100

   46 expr: expr TOKEN_ASSIGN expr_or .
   48 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 58

    $default  reduce using rule 46 (expr)


State 101

   48 expr_or: expr_or TOKEN_OR expr_and .
   50 expr_and: expr_and . TOKEN_AND expr_comp

    TOKEN_AND  shift, and go to state 59

    $default  reduce using rule 48 (expr_or)


State 102

   50 expr_and: expr_and TOKEN_AND expr_comp .
   52 expr_comp: expr_comp . TOKEN_LESSTHAN expr_arith1
   53          | expr_comp . TOKEN_LESSEQUAL expr_arith1
   54          | expr_comp . TOKEN_GREATERTHAN expr_arith1
   55          | expr_comp . TOKEN_GREATEREQUAL expr_arith1
   56          | expr_comp . TOKEN_EQUAL expr_arith1
   57          | expr_comp . TOKEN_NOTEQUAL expr_arith1

    TOKEN_LESSTHAN      shift, and go to state 60
    TOKEN_LESSEQUAL     shift, and go to state 61
    TOKEN_GREATERTHAN   shift, and go to state 62
    TOKEN_GREATEREQUAL  shift, and go to state 63
    TOKEN_EQUAL         shift, and go to state 64
    TOKEN_NOTEQUAL      shift, and go to state 65

    $default  reduce using rule 50 (expr_and)


State 103

   52 expr_comp: expr_comp TOKEN_LESSTHAN expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 52 (expr_comp)


State 104

   53 expr_comp: expr_comp TOKEN_LESSEQUAL expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 53 (expr_comp)


State 105

   54 expr_comp: expr_comp TOKEN_GREATERTHAN expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 54 (expr_comp)


State 106

   55 expr_comp: expr_comp TOKEN_GREATEREQUAL expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 55 (expr_comp)


State 107

   56 expr_comp: expr_comp TOKEN_EQUAL expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 56 (expr_comp)


State 108

   57 expr_comp: expr_comp TOKEN_NOTEQUAL expr_arith1 .
   59 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   60            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 66
    TOKEN_SUBTRACT  shift, and go to state 67

    $default  reduce using rule 57 (expr_comp)


State 109

   59 expr_arith1: expr_arith1 TOKEN_ADD expr_arith2 .
   62 expr_arith2: expr_arith2 . TOKEN_MULTIPLY expr_expo
   63            | expr_arith2 . TOKEN_DIVIDE expr_expo
   64            | expr_arith2 . TOKEN_REMAIN expr_expo

    TOKEN_MULTIPLY  shift, and go to state 68
    TOKEN_DIVIDE    shift, and go to state 69
    TOKEN_REMAIN    shift, and go to state 70

    $default  reduce using rule 59 (expr_arith1)


State 110

   60 expr_arith1: expr_arith1 TOKEN_SUBTRACT expr_arith2 .
   62 expr_arith2: expr_arith2 . TOKEN_MULTIPLY expr_expo
   63            | expr_arith2 . TOKEN_DIVIDE expr_expo
   64            | expr_arith2 . TOKEN_REMAIN expr_expo

    TOKEN_MULTIPLY  shift, and go to state 68
    TOKEN_DIVIDE    shift, and go to state 69
    TOKEN_REMAIN    shift, and go to state 70

    $default  reduce using rule 60 (expr_arith1)


State 111

   62 expr_arith2: expr_arith2 TOKEN_MULTIPLY expr_expo .
   66 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 71

    $default  reduce using rule 62 (expr_arith2)


State 112

   63 expr_arith2: expr_arith2 TOKEN_DIVIDE expr_expo .
   66 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 71

    $default  reduce using rule 63 (expr_arith2)


State 113

   64 expr_arith2: expr_arith2 TOKEN_REMAIN expr_expo .
   66 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 71

    $default  reduce using rule 64 (expr_arith2)


State 114

   66 expr_expo: expr_expo TOKEN_EXPONENTIAL expr_not .

    $default  reduce using rule 66 (expr_expo)


State 115

   26 arg: ident TOKEN_COLON . type

    TOKEN_ARRAY     shift, and go to state 10
    TOKEN_AUTO      shift, and go to state 11
    TOKEN_BOOLEAN   shift, and go to state 12
    TOKEN_CHAR      shift, and go to state 13
    TOKEN_FLOAT     shift, and go to state 14
    TOKEN_FUNCTION  shift, and go to state 15
    TOKEN_INTEGER   shift, and go to state 16
    TOKEN_STRING    shift, and go to state 17
    TOKEN_VOID      shift, and go to state 18

    type  go to state 132


State 116

   21 type: TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE .

    $default  reduce using rule 21 (type)


State 117

   24 arg_list: arg TOKEN_COMMA . arg_list

    TOKEN_TYPE_IDENT  shift, and go to state 1

    ident     go to state 74
    arg_list  go to state 133
    arg       go to state 77


State 118

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    $default  reduce using rule 43 (optional_stmt)

    ident          go to state 33
    optional_stmt  go to state 134
    expr           go to state 35
    expr_or        go to state 36
    expr_and       go to state 37
    expr_comp      go to state 38
    expr_arith1    go to state 39
    expr_arith2    go to state 40
    expr_expo      go to state 41
    expr_not       go to state 42
    expr_crement   go to state 43
    expr_group     go to state 44
    expr_base      go to state 45


State 119

   32 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   33               | TOKEN_IF TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE stmt
   35 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    ident         go to state 33
    expr          go to state 135
    expr_or       go to state 36
    expr_and      go to state 37
    expr_comp     go to state 38
    expr_arith1   go to state 39
    expr_arith2   go to state 40
    expr_expo     go to state 41
    expr_not      go to state 42
    expr_crement  go to state 43
    expr_group    go to state 44
    expr_base     go to state 45


State 120

   39 stmt_base: TOKEN_PRINT expr_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 136


State 121

   38 stmt_base: TOKEN_RETURN expr . TOKEN_SEMICOLON
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN     shift, and go to state 57
    TOKEN_SEMICOLON  shift, and go to state 137


State 122

   40 stmt_base: TOKEN_FRONTCURLYBRACKET stmt_list . TOKEN_BACKCURLYBRACKET

    TOKEN_BACKCURLYBRACKET  shift, and go to state 138


State 123

   37 stmt_base: expr . TOKEN_SEMICOLON
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN     shift, and go to state 57
    TOKEN_SEMICOLON  shift, and go to state 127


State 124

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET .

    $default  reduce using rule 6 (decl)


State 125

    7 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 139


State 126

   27 stmt_list: stmt stmt_list .

    $default  reduce using rule 27 (stmt_list)


State 127

   37 stmt_base: expr TOKEN_SEMICOLON .

    $default  reduce using rule 37 (stmt_base)


State 128

   10 array_content: expr TOKEN_COMMA . array_content

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    array_content  go to state 140
    ident          go to state 33
    expr           go to state 141
    expr_or        go to state 36
    expr_and       go to state 37
    expr_comp      go to state 38
    expr_arith1    go to state 39
    expr_arith2    go to state 40
    expr_expo      go to state 41
    expr_not       go to state 42
    expr_crement   go to state 43
    expr_group     go to state 44
    expr_base      go to state 93


State 129

   44 expr_list: expr TOKEN_COMMA expr_list .

    $default  reduce using rule 44 (expr_list)


State 130

   84 others: TOKEN_FRONTPARENTHESE expr_list TOKEN_BACKPARENTHESE .

    $default  reduce using rule 84 (others)


State 131

   83 others: TOKEN_FRONTSQUAREBRACKET expr TOKEN_BACKSQUAREBRACKET . others

    TOKEN_FRONTPARENTHESE     shift, and go to state 53
    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 54

    $default  reduce using rule 85 (others)

    others  go to state 142


State 132

   26 arg: ident TOKEN_COLON type .

    $default  reduce using rule 26 (arg)


State 133

   24 arg_list: arg TOKEN_COMMA arg_list .

    $default  reduce using rule 24 (arg_list)


State 134

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_SEMICOLON  shift, and go to state 143


State 135

   32 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   33               | TOKEN_IF TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE stmt
   35 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_BACKPARENTHESE  shift, and go to state 144
    TOKEN_ASSIGN          shift, and go to state 57


State 136

   39 stmt_base: TOKEN_PRINT expr_list TOKEN_SEMICOLON .

    $default  reduce using rule 39 (stmt_base)


State 137

   38 stmt_base: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 38 (stmt_base)


State 138

   40 stmt_base: TOKEN_FRONTCURLYBRACKET stmt_list TOKEN_BACKCURLYBRACKET .

    $default  reduce using rule 40 (stmt_base)


State 139

    7 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET array_content TOKEN_BACKCURLYBRACKET TOKEN_SEMICOLON .

    $default  reduce using rule 7 (decl)


State 140

   10 array_content: expr TOKEN_COMMA array_content .

    $default  reduce using rule 10 (array_content)


State 141

   10 array_content: expr . TOKEN_COMMA array_content
   46 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN  shift, and go to state 57
    TOKEN_COMMA   shift, and go to state 128


State 142

   83 others: TOKEN_FRONTSQUAREBRACKET expr TOKEN_BACKSQUAREBRACKET others .

    $default  reduce using rule 83 (others)


State 143

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    $default  reduce using rule 43 (optional_stmt)

    ident          go to state 33
    optional_stmt  go to state 145
    expr           go to state 35
    expr_or        go to state 36
    expr_and       go to state 37
    expr_comp      go to state 38
    expr_arith1    go to state 39
    expr_arith2    go to state 40
    expr_expo      go to state 41
    expr_not       go to state 42
    expr_crement   go to state 43
    expr_group     go to state 44
    expr_base      go to state 45


State 144

   32 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE . stmt_closed TOKEN_ELSE stmt_recursive
   33               | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE . stmt
   35 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE . stmt_closed TOKEN_ELSE stmt_closed

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_FOR                shift, and go to state 78
    TOKEN_IF                 shift, and go to state 79
    TOKEN_PRINT              shift, and go to state 80
    TOKEN_RETURN             shift, and go to state 81
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 82
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    decl            go to state 83
    ident           go to state 86
    stmt            go to state 146
    stmt_recursive  go to state 89
    stmt_closed     go to state 147
    stmt_base       go to state 91
    expr            go to state 123
    expr_or         go to state 36
    expr_and        go to state 37
    expr_comp       go to state 38
    expr_arith1     go to state 39
    expr_arith2     go to state 40
    expr_expo       go to state 41
    expr_not        go to state 42
    expr_crement    go to state 43
    expr_group      go to state 44
    expr_base       go to state 45


State 145

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_SEMICOLON  shift, and go to state 148


State 146

   33 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt .

    $default  reduce using rule 33 (stmt_recursive)


State 147

   30 stmt: stmt_closed .
   32 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed . TOKEN_ELSE stmt_recursive
   35 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed . TOKEN_ELSE stmt_closed

    TOKEN_ELSE  shift, and go to state 149

    $default  reduce using rule 30 (stmt)


State 148

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FALSE            shift, and go to state 24
    TOKEN_TRUE             shift, and go to state 25
    TOKEN_SUBTRACT         shift, and go to state 26
    TOKEN_FRONTPARENTHESE  shift, and go to state 27
    TOKEN_LOGICALNOT       shift, and go to state 28
    TOKEN_TYPE_CHAR        shift, and go to state 29
    TOKEN_TYPE_INT         shift, and go to state 30
    TOKEN_TYPE_FLOAT       shift, and go to state 31
    TOKEN_TYPE_IDENT       shift, and go to state 1
    TOKEN_TYPE_STRING      shift, and go to state 32

    $default  reduce using rule 43 (optional_stmt)

    ident          go to state 33
    optional_stmt  go to state 150
    expr           go to state 35
    expr_or        go to state 36
    expr_and       go to state 37
    expr_comp      go to state 38
    expr_arith1    go to state 39
    expr_arith2    go to state 40
    expr_expo      go to state 41
    expr_not       go to state 42
    expr_crement   go to state 43
    expr_group     go to state 44
    expr_base      go to state 45


State 149

   32 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE . stmt_recursive
   35 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE . stmt_closed

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_FOR                shift, and go to state 78
    TOKEN_IF                 shift, and go to state 79
    TOKEN_PRINT              shift, and go to state 80
    TOKEN_RETURN             shift, and go to state 81
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 82
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    decl            go to state 83
    ident           go to state 86
    stmt_recursive  go to state 151
    stmt_closed     go to state 152
    stmt_base       go to state 91
    expr            go to state 123
    expr_or         go to state 36
    expr_and        go to state 37
    expr_comp       go to state 38
    expr_arith1     go to state 39
    expr_arith2     go to state 40
    expr_expo       go to state 41
    expr_not        go to state 42
    expr_crement    go to state 43
    expr_group      go to state 44
    expr_base       go to state 45


State 150

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_BACKPARENTHESE stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_BACKPARENTHESE  shift, and go to state 153


State 151

   32 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive .

    $default  reduce using rule 32 (stmt_recursive)


State 152

   35 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed .

    $default  reduce using rule 35 (stmt_closed)


State 153

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE . stmt_recursive
   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE . stmt_closed

    TOKEN_FALSE              shift, and go to state 24
    TOKEN_FOR                shift, and go to state 78
    TOKEN_IF                 shift, and go to state 79
    TOKEN_PRINT              shift, and go to state 80
    TOKEN_RETURN             shift, and go to state 81
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_SUBTRACT           shift, and go to state 26
    TOKEN_FRONTPARENTHESE    shift, and go to state 27
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 82
    TOKEN_LOGICALNOT         shift, and go to state 28
    TOKEN_TYPE_CHAR          shift, and go to state 29
    TOKEN_TYPE_INT           shift, and go to state 30
    TOKEN_TYPE_FLOAT         shift, and go to state 31
    TOKEN_TYPE_IDENT         shift, and go to state 1
    TOKEN_TYPE_STRING        shift, and go to state 32

    decl            go to state 83
    ident           go to state 86
    stmt_recursive  go to state 154
    stmt_closed     go to state 155
    stmt_base       go to state 91
    expr            go to state 123
    expr_or         go to state 36
    expr_and        go to state 37
    expr_comp       go to state 38
    expr_arith1     go to state 39
    expr_arith2     go to state 40
    expr_expo       go to state 41
    expr_not        go to state 42
    expr_crement    go to state 43
    expr_group      go to state 44
    expr_base       go to state 45


State 154

   31 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive .

    $default  reduce using rule 31 (stmt_recursive)


State 155

   34 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed .

    $default  reduce using rule 34 (stmt_closed)
