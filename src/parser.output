Terminals unused in grammar

   TOKEN_EOF
   TOKEN_CCOMMENT
   TOKEN_CPLUSCOMMENT
   TOKEN_WHILE
   TOKEN_SPECIALCHAR
   TOKEN_NEGATIVE
   TOKEN_PERCENT
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | %empty

    4 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_SEMICOLON
    5     | TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET

    7 array_content: expr TOKEN_COMMA array_content
    8              | expr

    9 type: TOKEN_INTEGER
   10     | TOKEN_BOOLEAN
   11     | TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET type
   12     | TOKEN_CHAR
   13     | TOKEN_FLOAT
   14     | TOKEN_STRING
   15     | TOKEN_VOID
   16     | TOKEN_AUTO
   17     | TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE

   18 arg_lists: arg_list
   19          | %empty

   20 arg_list: arg TOKEN_COMMA arg_list
   21         | arg

   22 arg: TOKEN_TYPE_IDENT TOKEN_COLON type

   23 stmt_array: stmt_list
   24           | array_content

   25 stmt_list: stmt_list stmt
   26          | stmt

   27 stmt: stmt_recursive
   28     | stmt_closed

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   30               | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   31               | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt

   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed
   33            | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed
   34            | stmt_base

   35 stmt_base: expr TOKEN_SEMICOLON
   36          | TOKEN_RETURN expr TOKEN_SEMICOLON
   37          | TOKEN_PRINT expr_list TOKEN_SEMICOLON
   38          | TOKEN_FRONTCURLYBRACKET stmt_list TOKEN_BACKCURLYBRACKET
   39          | decl

   40 optional_stmt: expr
   41              | %empty

   42 expr_list: expr TOKEN_COMMA expr_list
   43          | expr
   44          | %empty

   45 expr: expr TOKEN_ASSIGN expr_or
   46     | expr_or

   47 expr_or: expr_or TOKEN_OR expr_and
   48        | expr_and

   49 expr_and: expr_and TOKEN_AND expr_comp
   50         | expr_comp

   51 expr_comp: expr_comp TOKEN_LESSTHAN expr_arith1
   52          | expr_comp TOKEN_LESSEQUAL expr_arith1
   53          | expr_comp TOKEN_GREATERTHAN expr_arith1
   54          | expr_comp TOKEN_GREATEREQUAL expr_arith1
   55          | expr_comp TOKEN_EQUAL expr_arith1
   56          | expr_comp TOKEN_NOTEQUAL expr_arith1
   57          | expr_arith1

   58 expr_arith1: expr_arith1 TOKEN_ADD expr_arith2
   59            | expr_arith1 TOKEN_SUBTRACT expr_arith2
   60            | expr_arith2

   61 expr_arith2: expr_arith2 TOKEN_MULTIPLY expr_expo
   62            | expr_arith2 TOKEN_DIVIDE expr_expo
   63            | expr_arith2 TOKEN_REMAIN expr_expo
   64            | expr_expo

   65 expr_expo: expr_expo TOKEN_EXPONENTIAL expr_not
   66          | expr_not

   67 expr_not: TOKEN_SUBTRACT expr_not
   68         | TOKEN_LOGICALNOT expr_not
   69         | expr_crement

   70 expr_crement: expr_crement TOKEN_INCREMENT
   71             | expr_crement TOKEN_DECREMENT
   72             | expr_group

   73 expr_group: TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE
   74           | expr_base

   75 expr_base: TOKEN_TYPE_CHAR
   76          | TOKEN_TYPE_INT
   77          | TOKEN_TRUE
   78          | TOKEN_FALSE
   79          | TOKEN_TYPE_FLOAT
   80          | TOKEN_TYPE_STRING
   81          | TOKEN_TYPE_IDENT others

   82 others: TOKEN_FRONTSQUAREBRACKET expr TOKEN_BACKSQUAREBRACKET others
   83       | TOKEN_FRONTPARENTHESE expr_list TOKEN_BACKPARENTHESE
   84       | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_EOF (258)
TOKEN_CCOMMENT (259)
TOKEN_CPLUSCOMMENT (260)
TOKEN_ARRAY (261) 11
TOKEN_AUTO (262) 16
TOKEN_BOOLEAN (263) 10
TOKEN_CHAR (264) 12
TOKEN_ELSE (265) 30 33
TOKEN_FALSE (266) 78
TOKEN_FLOAT (267) 13
TOKEN_FOR (268) 29 32
TOKEN_FUNCTION (269) 17
TOKEN_IF (270) 30 31 33
TOKEN_INTEGER (271) 9
TOKEN_PRINT (272) 37
TOKEN_RETURN (273) 36
TOKEN_STRING (274) 14
TOKEN_TRUE (275) 77
TOKEN_VOID (276) 15
TOKEN_WHILE (277)
TOKEN_SPECIALCHAR (278)
TOKEN_ADD (279) 58
TOKEN_SUBTRACT (280) 59 67
TOKEN_INCREMENT (281) 70
TOKEN_DECREMENT (282) 71
TOKEN_FRONTPARENTHESE (283) 17 29 30 31 32 33 73 83
TOKEN_BACKPARENTHESE (284) 17 29 30 31 32 33 73 83
TOKEN_FRONTSQUAREBRACKET (285) 11 82
TOKEN_BACKSQUAREBRACKET (286) 11 82
TOKEN_FRONTCURLYBRACKET (287) 6 38
TOKEN_BACKCURLYBRACKET (288) 6 38
TOKEN_NEGATIVE (289)
TOKEN_LOGICALNOT (290) 68
TOKEN_EXPONENTIAL (291) 65
TOKEN_MULTIPLY (292) 61
TOKEN_DIVIDE (293) 62
TOKEN_REMAIN (294) 63
TOKEN_LESSTHAN (295) 51
TOKEN_LESSEQUAL (296) 52
TOKEN_GREATERTHAN (297) 53
TOKEN_GREATEREQUAL (298) 54
TOKEN_EQUAL (299) 55
TOKEN_NOTEQUAL (300) 56
TOKEN_AND (301) 49
TOKEN_OR (302) 47
TOKEN_ASSIGN (303) 5 6 45
TOKEN_COLON (304) 4 5 6 22
TOKEN_SEMICOLON (305) 4 5 29 32 35 36 37
TOKEN_COMMA (306) 7 20 42
TOKEN_PERCENT (307)
TOKEN_TYPE_CHAR (308) 75
TOKEN_TYPE_INT (309) 76
TOKEN_TYPE_FLOAT (310) 79
TOKEN_TYPE_IDENT (311) 4 5 6 22 81
TOKEN_TYPE_STRING (312) 80
TOKEN_ERROR (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
decl_list (61)
    on left: 2 3, on right: 1 2
decl (62)
    on left: 4 5 6, on right: 2 39
array_content (63)
    on left: 7 8, on right: 7 24
type (64)
    on left: 9 10 11 12 13 14 15 16 17, on right: 4 5 6 11 17 22
arg_lists (65)
    on left: 18 19, on right: 17
arg_list (66)
    on left: 20 21, on right: 18 20
arg (67)
    on left: 22, on right: 20 21
stmt_array (68)
    on left: 23 24, on right: 6
stmt_list (69)
    on left: 25 26, on right: 23 25 38
stmt (70)
    on left: 27 28, on right: 25 26 31
stmt_recursive (71)
    on left: 29 30 31, on right: 27 29 30
stmt_closed (72)
    on left: 32 33 34, on right: 28 30 32 33
stmt_base (73)
    on left: 35 36 37 38 39, on right: 34
optional_stmt (74)
    on left: 40 41, on right: 11 29 32
expr_list (75)
    on left: 42 43 44, on right: 5 37 42 83
expr (76)
    on left: 45 46, on right: 7 8 30 31 33 35 36 40 42 43 45 73 82
expr_or (77)
    on left: 47 48, on right: 45 46 47
expr_and (78)
    on left: 49 50, on right: 47 48 49
expr_comp (79)
    on left: 51 52 53 54 55 56 57, on right: 49 50 51 52 53 54 55 56
expr_arith1 (80)
    on left: 58 59 60, on right: 51 52 53 54 55 56 57 58 59
expr_arith2 (81)
    on left: 61 62 63 64, on right: 58 59 60 61 62 63
expr_expo (82)
    on left: 65 66, on right: 61 62 63 64 65
expr_not (83)
    on left: 67 68 69, on right: 65 66 67 68
expr_crement (84)
    on left: 70 71 72, on right: 69 70 71
expr_group (85)
    on left: 73 74, on right: 72
expr_base (86)
    on left: 75 76 77 78 79 80 81, on right: 74
others (87)
    on left: 82 83 84, on right: 81 82


State 0

    0 $accept: . program $end

    TOKEN_TYPE_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4


State 1

    4 decl: TOKEN_TYPE_IDENT . TOKEN_COLON type TOKEN_SEMICOLON
    5     | TOKEN_TYPE_IDENT . TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | TOKEN_TYPE_IDENT . TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET

    TOKEN_COLON  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list .

    $default  reduce using rule 1 (program)


State 4

    2 decl_list: decl . decl_list

    TOKEN_TYPE_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 7
    decl       go to state 4


State 5

    4 decl: TOKEN_TYPE_IDENT TOKEN_COLON . type TOKEN_SEMICOLON
    5     | TOKEN_TYPE_IDENT TOKEN_COLON . type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | TOKEN_TYPE_IDENT TOKEN_COLON . type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET

    TOKEN_ARRAY     shift, and go to state 8
    TOKEN_AUTO      shift, and go to state 9
    TOKEN_BOOLEAN   shift, and go to state 10
    TOKEN_CHAR      shift, and go to state 11
    TOKEN_FLOAT     shift, and go to state 12
    TOKEN_FUNCTION  shift, and go to state 13
    TOKEN_INTEGER   shift, and go to state 14
    TOKEN_STRING    shift, and go to state 15
    TOKEN_VOID      shift, and go to state 16

    type  go to state 17


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 8

   11 type: TOKEN_ARRAY . TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET type

    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 18


State 9

   16 type: TOKEN_AUTO .

    $default  reduce using rule 16 (type)


State 10

   10 type: TOKEN_BOOLEAN .

    $default  reduce using rule 10 (type)


State 11

   12 type: TOKEN_CHAR .

    $default  reduce using rule 12 (type)


State 12

   13 type: TOKEN_FLOAT .

    $default  reduce using rule 13 (type)


State 13

   17 type: TOKEN_FUNCTION . type TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE

    TOKEN_ARRAY     shift, and go to state 8
    TOKEN_AUTO      shift, and go to state 9
    TOKEN_BOOLEAN   shift, and go to state 10
    TOKEN_CHAR      shift, and go to state 11
    TOKEN_FLOAT     shift, and go to state 12
    TOKEN_FUNCTION  shift, and go to state 13
    TOKEN_INTEGER   shift, and go to state 14
    TOKEN_STRING    shift, and go to state 15
    TOKEN_VOID      shift, and go to state 16

    type  go to state 19


State 14

    9 type: TOKEN_INTEGER .

    $default  reduce using rule 9 (type)


State 15

   14 type: TOKEN_STRING .

    $default  reduce using rule 14 (type)


State 16

   15 type: TOKEN_VOID .

    $default  reduce using rule 15 (type)


State 17

    4 decl: TOKEN_TYPE_IDENT TOKEN_COLON type . TOKEN_SEMICOLON
    5     | TOKEN_TYPE_IDENT TOKEN_COLON type . TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | TOKEN_TYPE_IDENT TOKEN_COLON type . TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET

    TOKEN_ASSIGN     shift, and go to state 20
    TOKEN_SEMICOLON  shift, and go to state 21


State 18

   11 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET . optional_stmt TOKEN_BACKSQUAREBRACKET type

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 41 (optional_stmt)

    optional_stmt  go to state 32
    expr           go to state 33
    expr_or        go to state 34
    expr_and       go to state 35
    expr_comp      go to state 36
    expr_arith1    go to state 37
    expr_arith2    go to state 38
    expr_expo      go to state 39
    expr_not       go to state 40
    expr_crement   go to state 41
    expr_group     go to state 42
    expr_base      go to state 43


State 19

   17 type: TOKEN_FUNCTION type . TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE

    TOKEN_FRONTPARENTHESE  shift, and go to state 44


State 20

    5 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN . expr_list TOKEN_SEMICOLON
    6     | TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN . TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 45
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 30
    TOKEN_TYPE_STRING        shift, and go to state 31

    $default  reduce using rule 44 (expr_list)

    expr_list     go to state 46
    expr          go to state 47
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 21

    4 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 4 (decl)


State 22

   78 expr_base: TOKEN_FALSE .

    $default  reduce using rule 78 (expr_base)


State 23

   77 expr_base: TOKEN_TRUE .

    $default  reduce using rule 77 (expr_base)


State 24

   67 expr_not: TOKEN_SUBTRACT . expr_not

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_not      go to state 48
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 25

   73 expr_group: TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr          go to state 49
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 26

   68 expr_not: TOKEN_LOGICALNOT . expr_not

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_not      go to state 50
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 27

   75 expr_base: TOKEN_TYPE_CHAR .

    $default  reduce using rule 75 (expr_base)


State 28

   76 expr_base: TOKEN_TYPE_INT .

    $default  reduce using rule 76 (expr_base)


State 29

   79 expr_base: TOKEN_TYPE_FLOAT .

    $default  reduce using rule 79 (expr_base)


State 30

   81 expr_base: TOKEN_TYPE_IDENT . others

    TOKEN_FRONTPARENTHESE     shift, and go to state 51
    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 52

    $default  reduce using rule 84 (others)

    others  go to state 53


State 31

   80 expr_base: TOKEN_TYPE_STRING .

    $default  reduce using rule 80 (expr_base)


State 32

   11 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt . TOKEN_BACKSQUAREBRACKET type

    TOKEN_BACKSQUAREBRACKET  shift, and go to state 54


State 33

   40 optional_stmt: expr .
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN  shift, and go to state 55

    $default  reduce using rule 40 (optional_stmt)


State 34

   46 expr: expr_or .
   47 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 56

    $default  reduce using rule 46 (expr)


State 35

   48 expr_or: expr_and .
   49 expr_and: expr_and . TOKEN_AND expr_comp

    TOKEN_AND  shift, and go to state 57

    $default  reduce using rule 48 (expr_or)


State 36

   50 expr_and: expr_comp .
   51 expr_comp: expr_comp . TOKEN_LESSTHAN expr_arith1
   52          | expr_comp . TOKEN_LESSEQUAL expr_arith1
   53          | expr_comp . TOKEN_GREATERTHAN expr_arith1
   54          | expr_comp . TOKEN_GREATEREQUAL expr_arith1
   55          | expr_comp . TOKEN_EQUAL expr_arith1
   56          | expr_comp . TOKEN_NOTEQUAL expr_arith1

    TOKEN_LESSTHAN      shift, and go to state 58
    TOKEN_LESSEQUAL     shift, and go to state 59
    TOKEN_GREATERTHAN   shift, and go to state 60
    TOKEN_GREATEREQUAL  shift, and go to state 61
    TOKEN_EQUAL         shift, and go to state 62
    TOKEN_NOTEQUAL      shift, and go to state 63

    $default  reduce using rule 50 (expr_and)


State 37

   57 expr_comp: expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 57 (expr_comp)


State 38

   60 expr_arith1: expr_arith2 .
   61 expr_arith2: expr_arith2 . TOKEN_MULTIPLY expr_expo
   62            | expr_arith2 . TOKEN_DIVIDE expr_expo
   63            | expr_arith2 . TOKEN_REMAIN expr_expo

    TOKEN_MULTIPLY  shift, and go to state 66
    TOKEN_DIVIDE    shift, and go to state 67
    TOKEN_REMAIN    shift, and go to state 68

    $default  reduce using rule 60 (expr_arith1)


State 39

   64 expr_arith2: expr_expo .
   65 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 69

    $default  reduce using rule 64 (expr_arith2)


State 40

   66 expr_expo: expr_not .

    $default  reduce using rule 66 (expr_expo)


State 41

   69 expr_not: expr_crement .
   70 expr_crement: expr_crement . TOKEN_INCREMENT
   71             | expr_crement . TOKEN_DECREMENT

    TOKEN_INCREMENT  shift, and go to state 70
    TOKEN_DECREMENT  shift, and go to state 71

    $default  reduce using rule 69 (expr_not)


State 42

   72 expr_crement: expr_group .

    $default  reduce using rule 72 (expr_crement)


State 43

   74 expr_group: expr_base .

    $default  reduce using rule 74 (expr_group)


State 44

   17 type: TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE . arg_lists TOKEN_BACKPARENTHESE

    TOKEN_TYPE_IDENT  shift, and go to state 72

    $default  reduce using rule 19 (arg_lists)

    arg_lists  go to state 73
    arg_list   go to state 74
    arg        go to state 75


State 45

    6 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET . stmt_array TOKEN_BACKCURLYBRACKET

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    decl            go to state 82
    array_content   go to state 83
    stmt_array      go to state 84
    stmt_list       go to state 85
    stmt            go to state 86
    stmt_recursive  go to state 87
    stmt_closed     go to state 88
    stmt_base       go to state 89
    expr            go to state 90
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 46

    5 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN expr_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 91


State 47

   42 expr_list: expr . TOKEN_COMMA expr_list
   43          | expr .
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN  shift, and go to state 55
    TOKEN_COMMA   shift, and go to state 92

    $default  reduce using rule 43 (expr_list)


State 48

   67 expr_not: TOKEN_SUBTRACT expr_not .

    $default  reduce using rule 67 (expr_not)


State 49

   45 expr: expr . TOKEN_ASSIGN expr_or
   73 expr_group: TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE

    TOKEN_BACKPARENTHESE  shift, and go to state 93
    TOKEN_ASSIGN          shift, and go to state 55


State 50

   68 expr_not: TOKEN_LOGICALNOT expr_not .

    $default  reduce using rule 68 (expr_not)


State 51

   83 others: TOKEN_FRONTPARENTHESE . expr_list TOKEN_BACKPARENTHESE

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 44 (expr_list)

    expr_list     go to state 94
    expr          go to state 47
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 52

   82 others: TOKEN_FRONTSQUAREBRACKET . expr TOKEN_BACKSQUAREBRACKET others

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr          go to state 95
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 53

   81 expr_base: TOKEN_TYPE_IDENT others .

    $default  reduce using rule 81 (expr_base)


State 54

   11 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET . type

    TOKEN_ARRAY     shift, and go to state 8
    TOKEN_AUTO      shift, and go to state 9
    TOKEN_BOOLEAN   shift, and go to state 10
    TOKEN_CHAR      shift, and go to state 11
    TOKEN_FLOAT     shift, and go to state 12
    TOKEN_FUNCTION  shift, and go to state 13
    TOKEN_INTEGER   shift, and go to state 14
    TOKEN_STRING    shift, and go to state 15
    TOKEN_VOID      shift, and go to state 16

    type  go to state 96


State 55

   45 expr: expr TOKEN_ASSIGN . expr_or

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_or       go to state 97
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 56

   47 expr_or: expr_or TOKEN_OR . expr_and

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_and      go to state 98
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 57

   49 expr_and: expr_and TOKEN_AND . expr_comp

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_comp     go to state 99
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 58

   51 expr_comp: expr_comp TOKEN_LESSTHAN . expr_arith1

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith1   go to state 100
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 59

   52 expr_comp: expr_comp TOKEN_LESSEQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith1   go to state 101
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 60

   53 expr_comp: expr_comp TOKEN_GREATERTHAN . expr_arith1

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith1   go to state 102
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 61

   54 expr_comp: expr_comp TOKEN_GREATEREQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith1   go to state 103
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 62

   55 expr_comp: expr_comp TOKEN_EQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith1   go to state 104
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 63

   56 expr_comp: expr_comp TOKEN_NOTEQUAL . expr_arith1

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith1   go to state 105
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 64

   58 expr_arith1: expr_arith1 TOKEN_ADD . expr_arith2

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith2   go to state 106
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 65

   59 expr_arith1: expr_arith1 TOKEN_SUBTRACT . expr_arith2

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_arith2   go to state 107
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 66

   61 expr_arith2: expr_arith2 TOKEN_MULTIPLY . expr_expo

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_expo     go to state 108
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 67

   62 expr_arith2: expr_arith2 TOKEN_DIVIDE . expr_expo

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_expo     go to state 109
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 68

   63 expr_arith2: expr_arith2 TOKEN_REMAIN . expr_expo

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_expo     go to state 110
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 69

   65 expr_expo: expr_expo TOKEN_EXPONENTIAL . expr_not

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr_not      go to state 111
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 70

   70 expr_crement: expr_crement TOKEN_INCREMENT .

    $default  reduce using rule 70 (expr_crement)


State 71

   71 expr_crement: expr_crement TOKEN_DECREMENT .

    $default  reduce using rule 71 (expr_crement)


State 72

   22 arg: TOKEN_TYPE_IDENT . TOKEN_COLON type

    TOKEN_COLON  shift, and go to state 112


State 73

   17 type: TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE arg_lists . TOKEN_BACKPARENTHESE

    TOKEN_BACKPARENTHESE  shift, and go to state 113


State 74

   18 arg_lists: arg_list .

    $default  reduce using rule 18 (arg_lists)


State 75

   20 arg_list: arg . TOKEN_COMMA arg_list
   21         | arg .

    TOKEN_COMMA  shift, and go to state 114

    $default  reduce using rule 21 (arg_list)


State 76

   29 stmt_recursive: TOKEN_FOR . TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR . TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FRONTPARENTHESE  shift, and go to state 115


State 77

   30 stmt_recursive: TOKEN_IF . TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   31               | TOKEN_IF . TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt
   33 stmt_closed: TOKEN_IF . TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed

    TOKEN_FRONTPARENTHESE  shift, and go to state 116


State 78

   37 stmt_base: TOKEN_PRINT . expr_list TOKEN_SEMICOLON

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 44 (expr_list)

    expr_list     go to state 117
    expr          go to state 47
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 79

   36 stmt_base: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr          go to state 118
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 80

   38 stmt_base: TOKEN_FRONTCURLYBRACKET . stmt_list TOKEN_BACKCURLYBRACKET

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    decl            go to state 82
    stmt_list       go to state 119
    stmt            go to state 86
    stmt_recursive  go to state 87
    stmt_closed     go to state 88
    stmt_base       go to state 89
    expr            go to state 120
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 81

    4 decl: TOKEN_TYPE_IDENT . TOKEN_COLON type TOKEN_SEMICOLON
    5     | TOKEN_TYPE_IDENT . TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON
    6     | TOKEN_TYPE_IDENT . TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET
   81 expr_base: TOKEN_TYPE_IDENT . others

    TOKEN_FRONTPARENTHESE     shift, and go to state 51
    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 52
    TOKEN_COLON               shift, and go to state 5

    $default  reduce using rule 84 (others)

    others  go to state 53


State 82

   39 stmt_base: decl .

    $default  reduce using rule 39 (stmt_base)


State 83

   24 stmt_array: array_content .

    $default  reduce using rule 24 (stmt_array)


State 84

    6 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array . TOKEN_BACKCURLYBRACKET

    TOKEN_BACKCURLYBRACKET  shift, and go to state 121


State 85

   23 stmt_array: stmt_list .
   25 stmt_list: stmt_list . stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    $default  reduce using rule 23 (stmt_array)

    decl            go to state 82
    stmt            go to state 122
    stmt_recursive  go to state 87
    stmt_closed     go to state 88
    stmt_base       go to state 89
    expr            go to state 120
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 86

   26 stmt_list: stmt .

    $default  reduce using rule 26 (stmt_list)


State 87

   27 stmt: stmt_recursive .

    $default  reduce using rule 27 (stmt)


State 88

   28 stmt: stmt_closed .

    $default  reduce using rule 28 (stmt)


State 89

   34 stmt_closed: stmt_base .

    $default  reduce using rule 34 (stmt_closed)


State 90

    7 array_content: expr . TOKEN_COMMA array_content
    8              | expr .
   35 stmt_base: expr . TOKEN_SEMICOLON
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN     shift, and go to state 55
    TOKEN_SEMICOLON  shift, and go to state 123
    TOKEN_COMMA      shift, and go to state 124

    $default  reduce using rule 8 (array_content)


State 91

    5 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN expr_list TOKEN_SEMICOLON .

    $default  reduce using rule 5 (decl)


State 92

   42 expr_list: expr TOKEN_COMMA . expr_list

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 44 (expr_list)

    expr_list     go to state 125
    expr          go to state 47
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 93

   73 expr_group: TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE .

    $default  reduce using rule 73 (expr_group)


State 94

   83 others: TOKEN_FRONTPARENTHESE expr_list . TOKEN_BACKPARENTHESE

    TOKEN_BACKPARENTHESE  shift, and go to state 126


State 95

   45 expr: expr . TOKEN_ASSIGN expr_or
   82 others: TOKEN_FRONTSQUAREBRACKET expr . TOKEN_BACKSQUAREBRACKET others

    TOKEN_BACKSQUAREBRACKET  shift, and go to state 127
    TOKEN_ASSIGN             shift, and go to state 55


State 96

   11 type: TOKEN_ARRAY TOKEN_FRONTSQUAREBRACKET optional_stmt TOKEN_BACKSQUAREBRACKET type .

    $default  reduce using rule 11 (type)


State 97

   45 expr: expr TOKEN_ASSIGN expr_or .
   47 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 56

    $default  reduce using rule 45 (expr)


State 98

   47 expr_or: expr_or TOKEN_OR expr_and .
   49 expr_and: expr_and . TOKEN_AND expr_comp

    TOKEN_AND  shift, and go to state 57

    $default  reduce using rule 47 (expr_or)


State 99

   49 expr_and: expr_and TOKEN_AND expr_comp .
   51 expr_comp: expr_comp . TOKEN_LESSTHAN expr_arith1
   52          | expr_comp . TOKEN_LESSEQUAL expr_arith1
   53          | expr_comp . TOKEN_GREATERTHAN expr_arith1
   54          | expr_comp . TOKEN_GREATEREQUAL expr_arith1
   55          | expr_comp . TOKEN_EQUAL expr_arith1
   56          | expr_comp . TOKEN_NOTEQUAL expr_arith1

    TOKEN_LESSTHAN      shift, and go to state 58
    TOKEN_LESSEQUAL     shift, and go to state 59
    TOKEN_GREATERTHAN   shift, and go to state 60
    TOKEN_GREATEREQUAL  shift, and go to state 61
    TOKEN_EQUAL         shift, and go to state 62
    TOKEN_NOTEQUAL      shift, and go to state 63

    $default  reduce using rule 49 (expr_and)


State 100

   51 expr_comp: expr_comp TOKEN_LESSTHAN expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 51 (expr_comp)


State 101

   52 expr_comp: expr_comp TOKEN_LESSEQUAL expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 52 (expr_comp)


State 102

   53 expr_comp: expr_comp TOKEN_GREATERTHAN expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 53 (expr_comp)


State 103

   54 expr_comp: expr_comp TOKEN_GREATEREQUAL expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 54 (expr_comp)


State 104

   55 expr_comp: expr_comp TOKEN_EQUAL expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 55 (expr_comp)


State 105

   56 expr_comp: expr_comp TOKEN_NOTEQUAL expr_arith1 .
   58 expr_arith1: expr_arith1 . TOKEN_ADD expr_arith2
   59            | expr_arith1 . TOKEN_SUBTRACT expr_arith2

    TOKEN_ADD       shift, and go to state 64
    TOKEN_SUBTRACT  shift, and go to state 65

    $default  reduce using rule 56 (expr_comp)


State 106

   58 expr_arith1: expr_arith1 TOKEN_ADD expr_arith2 .
   61 expr_arith2: expr_arith2 . TOKEN_MULTIPLY expr_expo
   62            | expr_arith2 . TOKEN_DIVIDE expr_expo
   63            | expr_arith2 . TOKEN_REMAIN expr_expo

    TOKEN_MULTIPLY  shift, and go to state 66
    TOKEN_DIVIDE    shift, and go to state 67
    TOKEN_REMAIN    shift, and go to state 68

    $default  reduce using rule 58 (expr_arith1)


State 107

   59 expr_arith1: expr_arith1 TOKEN_SUBTRACT expr_arith2 .
   61 expr_arith2: expr_arith2 . TOKEN_MULTIPLY expr_expo
   62            | expr_arith2 . TOKEN_DIVIDE expr_expo
   63            | expr_arith2 . TOKEN_REMAIN expr_expo

    TOKEN_MULTIPLY  shift, and go to state 66
    TOKEN_DIVIDE    shift, and go to state 67
    TOKEN_REMAIN    shift, and go to state 68

    $default  reduce using rule 59 (expr_arith1)


State 108

   61 expr_arith2: expr_arith2 TOKEN_MULTIPLY expr_expo .
   65 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 69

    $default  reduce using rule 61 (expr_arith2)


State 109

   62 expr_arith2: expr_arith2 TOKEN_DIVIDE expr_expo .
   65 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 69

    $default  reduce using rule 62 (expr_arith2)


State 110

   63 expr_arith2: expr_arith2 TOKEN_REMAIN expr_expo .
   65 expr_expo: expr_expo . TOKEN_EXPONENTIAL expr_not

    TOKEN_EXPONENTIAL  shift, and go to state 69

    $default  reduce using rule 63 (expr_arith2)


State 111

   65 expr_expo: expr_expo TOKEN_EXPONENTIAL expr_not .

    $default  reduce using rule 65 (expr_expo)


State 112

   22 arg: TOKEN_TYPE_IDENT TOKEN_COLON . type

    TOKEN_ARRAY     shift, and go to state 8
    TOKEN_AUTO      shift, and go to state 9
    TOKEN_BOOLEAN   shift, and go to state 10
    TOKEN_CHAR      shift, and go to state 11
    TOKEN_FLOAT     shift, and go to state 12
    TOKEN_FUNCTION  shift, and go to state 13
    TOKEN_INTEGER   shift, and go to state 14
    TOKEN_STRING    shift, and go to state 15
    TOKEN_VOID      shift, and go to state 16

    type  go to state 128


State 113

   17 type: TOKEN_FUNCTION type TOKEN_FRONTPARENTHESE arg_lists TOKEN_BACKPARENTHESE .

    $default  reduce using rule 17 (type)


State 114

   20 arg_list: arg TOKEN_COMMA . arg_list

    TOKEN_TYPE_IDENT  shift, and go to state 72

    arg_list  go to state 129
    arg       go to state 75


State 115

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 41 (optional_stmt)

    optional_stmt  go to state 130
    expr           go to state 33
    expr_or        go to state 34
    expr_and       go to state 35
    expr_comp      go to state 36
    expr_arith1    go to state 37
    expr_arith2    go to state 38
    expr_expo      go to state 39
    expr_not       go to state 40
    expr_crement   go to state 41
    expr_group     go to state 42
    expr_base      go to state 43


State 116

   30 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   31               | TOKEN_IF TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE stmt
   33 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE . expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    expr          go to state 131
    expr_or       go to state 34
    expr_and      go to state 35
    expr_comp     go to state 36
    expr_arith1   go to state 37
    expr_arith2   go to state 38
    expr_expo     go to state 39
    expr_not      go to state 40
    expr_crement  go to state 41
    expr_group    go to state 42
    expr_base     go to state 43


State 117

   37 stmt_base: TOKEN_PRINT expr_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 132


State 118

   36 stmt_base: TOKEN_RETURN expr . TOKEN_SEMICOLON
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN     shift, and go to state 55
    TOKEN_SEMICOLON  shift, and go to state 133


State 119

   25 stmt_list: stmt_list . stmt
   38 stmt_base: TOKEN_FRONTCURLYBRACKET stmt_list . TOKEN_BACKCURLYBRACKET

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_BACKCURLYBRACKET   shift, and go to state 134
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    decl            go to state 82
    stmt            go to state 122
    stmt_recursive  go to state 87
    stmt_closed     go to state 88
    stmt_base       go to state 89
    expr            go to state 120
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 120

   35 stmt_base: expr . TOKEN_SEMICOLON
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN     shift, and go to state 55
    TOKEN_SEMICOLON  shift, and go to state 123


State 121

    6 decl: TOKEN_TYPE_IDENT TOKEN_COLON type TOKEN_ASSIGN TOKEN_FRONTCURLYBRACKET stmt_array TOKEN_BACKCURLYBRACKET .

    $default  reduce using rule 6 (decl)


State 122

   25 stmt_list: stmt_list stmt .

    $default  reduce using rule 25 (stmt_list)


State 123

   35 stmt_base: expr TOKEN_SEMICOLON .

    $default  reduce using rule 35 (stmt_base)


State 124

    7 array_content: expr TOKEN_COMMA . array_content

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    array_content  go to state 135
    expr           go to state 136
    expr_or        go to state 34
    expr_and       go to state 35
    expr_comp      go to state 36
    expr_arith1    go to state 37
    expr_arith2    go to state 38
    expr_expo      go to state 39
    expr_not       go to state 40
    expr_crement   go to state 41
    expr_group     go to state 42
    expr_base      go to state 43


State 125

   42 expr_list: expr TOKEN_COMMA expr_list .

    $default  reduce using rule 42 (expr_list)


State 126

   83 others: TOKEN_FRONTPARENTHESE expr_list TOKEN_BACKPARENTHESE .

    $default  reduce using rule 83 (others)


State 127

   82 others: TOKEN_FRONTSQUAREBRACKET expr TOKEN_BACKSQUAREBRACKET . others

    TOKEN_FRONTPARENTHESE     shift, and go to state 51
    TOKEN_FRONTSQUAREBRACKET  shift, and go to state 52

    $default  reduce using rule 84 (others)

    others  go to state 137


State 128

   22 arg: TOKEN_TYPE_IDENT TOKEN_COLON type .

    $default  reduce using rule 22 (arg)


State 129

   20 arg_list: arg TOKEN_COMMA arg_list .

    $default  reduce using rule 20 (arg_list)


State 130

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_SEMICOLON  shift, and go to state 138


State 131

   30 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive
   31               | TOKEN_IF TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE stmt
   33 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr . TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_BACKPARENTHESE  shift, and go to state 139
    TOKEN_ASSIGN          shift, and go to state 55


State 132

   37 stmt_base: TOKEN_PRINT expr_list TOKEN_SEMICOLON .

    $default  reduce using rule 37 (stmt_base)


State 133

   36 stmt_base: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 36 (stmt_base)


State 134

   38 stmt_base: TOKEN_FRONTCURLYBRACKET stmt_list TOKEN_BACKCURLYBRACKET .

    $default  reduce using rule 38 (stmt_base)


State 135

    7 array_content: expr TOKEN_COMMA array_content .

    $default  reduce using rule 7 (array_content)


State 136

    7 array_content: expr . TOKEN_COMMA array_content
    8              | expr .
   45 expr: expr . TOKEN_ASSIGN expr_or

    TOKEN_ASSIGN  shift, and go to state 55
    TOKEN_COMMA   shift, and go to state 124

    $default  reduce using rule 8 (array_content)


State 137

   82 others: TOKEN_FRONTSQUAREBRACKET expr TOKEN_BACKSQUAREBRACKET others .

    $default  reduce using rule 82 (others)


State 138

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 41 (optional_stmt)

    optional_stmt  go to state 140
    expr           go to state 33
    expr_or        go to state 34
    expr_and       go to state 35
    expr_comp      go to state 36
    expr_arith1    go to state 37
    expr_arith2    go to state 38
    expr_expo      go to state 39
    expr_not       go to state 40
    expr_crement   go to state 41
    expr_group     go to state 42
    expr_base      go to state 43


State 139

   30 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE . stmt_closed TOKEN_ELSE stmt_recursive
   31               | TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE . stmt
   33 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE . stmt_closed TOKEN_ELSE stmt_closed

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    decl            go to state 82
    stmt            go to state 141
    stmt_recursive  go to state 87
    stmt_closed     go to state 142
    stmt_base       go to state 89
    expr            go to state 120
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 140

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_SEMICOLON  shift, and go to state 143


State 141

   31 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt .

    $default  reduce using rule 31 (stmt_recursive)


State 142

   28 stmt: stmt_closed .
   30 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed . TOKEN_ELSE stmt_recursive
   33 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed . TOKEN_ELSE stmt_closed

    TOKEN_ELSE  shift, and go to state 144

    $default  reduce using rule 28 (stmt)


State 143

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON . optional_stmt TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_FALSE            shift, and go to state 22
    TOKEN_TRUE             shift, and go to state 23
    TOKEN_SUBTRACT         shift, and go to state 24
    TOKEN_FRONTPARENTHESE  shift, and go to state 25
    TOKEN_LOGICALNOT       shift, and go to state 26
    TOKEN_TYPE_CHAR        shift, and go to state 27
    TOKEN_TYPE_INT         shift, and go to state 28
    TOKEN_TYPE_FLOAT       shift, and go to state 29
    TOKEN_TYPE_IDENT       shift, and go to state 30
    TOKEN_TYPE_STRING      shift, and go to state 31

    $default  reduce using rule 41 (optional_stmt)

    optional_stmt  go to state 145
    expr           go to state 33
    expr_or        go to state 34
    expr_and       go to state 35
    expr_comp      go to state 36
    expr_arith1    go to state 37
    expr_arith2    go to state 38
    expr_expo      go to state 39
    expr_not       go to state 40
    expr_crement   go to state 41
    expr_group     go to state 42
    expr_base      go to state 43


State 144

   30 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE . stmt_recursive
   33 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE . stmt_closed

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    decl            go to state 82
    stmt_recursive  go to state 146
    stmt_closed     go to state 147
    stmt_base       go to state 89
    expr            go to state 120
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 145

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_BACKPARENTHESE stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt . TOKEN_BACKPARENTHESE stmt_closed

    TOKEN_BACKPARENTHESE  shift, and go to state 148


State 146

   30 stmt_recursive: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_recursive .

    $default  reduce using rule 30 (stmt_recursive)


State 147

   33 stmt_closed: TOKEN_IF TOKEN_FRONTPARENTHESE expr TOKEN_BACKPARENTHESE stmt_closed TOKEN_ELSE stmt_closed .

    $default  reduce using rule 33 (stmt_closed)


State 148

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE . stmt_recursive
   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE . stmt_closed

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 76
    TOKEN_IF                 shift, and go to state 77
    TOKEN_PRINT              shift, and go to state 78
    TOKEN_RETURN             shift, and go to state 79
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_SUBTRACT           shift, and go to state 24
    TOKEN_FRONTPARENTHESE    shift, and go to state 25
    TOKEN_FRONTCURLYBRACKET  shift, and go to state 80
    TOKEN_LOGICALNOT         shift, and go to state 26
    TOKEN_TYPE_CHAR          shift, and go to state 27
    TOKEN_TYPE_INT           shift, and go to state 28
    TOKEN_TYPE_FLOAT         shift, and go to state 29
    TOKEN_TYPE_IDENT         shift, and go to state 81
    TOKEN_TYPE_STRING        shift, and go to state 31

    decl            go to state 82
    stmt_recursive  go to state 149
    stmt_closed     go to state 150
    stmt_base       go to state 89
    expr            go to state 120
    expr_or         go to state 34
    expr_and        go to state 35
    expr_comp       go to state 36
    expr_arith1     go to state 37
    expr_arith2     go to state 38
    expr_expo       go to state 39
    expr_not        go to state 40
    expr_crement    go to state 41
    expr_group      go to state 42
    expr_base       go to state 43


State 149

   29 stmt_recursive: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_recursive .

    $default  reduce using rule 29 (stmt_recursive)


State 150

   32 stmt_closed: TOKEN_FOR TOKEN_FRONTPARENTHESE optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_SEMICOLON optional_stmt TOKEN_BACKPARENTHESE stmt_closed .

    $default  reduce using rule 32 (stmt_closed)
